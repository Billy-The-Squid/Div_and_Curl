// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel ComputeOutwards
#pragma kernel ComputeSwirl

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float3> _Positions;
RWStructuredBuffer<float3> _Vectors;
float3 _CenterPosition;

#include "./Vector-Field-Implementation/FieldLibrary.hlsl"

#define COMPUTE(fieldName) \
[numthreads(64,1,1)] \
void Compute##fieldName (uint3 id : SV_DispatchThreadID) \
{ \
    fieldName field;  \
    _Vectors[id.x] = field.Field(_Positions[id.x] - _CenterPosition); \
}

COMPUTE(Outwards)
COMPUTE(Swirl)