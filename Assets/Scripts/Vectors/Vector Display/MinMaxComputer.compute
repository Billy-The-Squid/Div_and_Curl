// Each #kernel tells which function to compile; you can have many kernels
//#pragma kernel CalculateMagnitudes
#pragma kernel MaxMagnitude


int _NumberOfPoints;
// The buffer storing the value of the vector field at each point
RWStructuredBuffer<float3> _Vectors;
// Magnitudes
RWStructuredBuffer<float> _Magnitudes;
// Maximum magnitude that any vector has. Has only one entry.
RWStructuredBuffer<float> _MaxMagnitude;



//float CalculateMagnitudes(float index)
//{
//    float3 vect = _Vectors[index];
//    float vect_mag = sqrt(vect.x * vect.x + vect.y * vect.y + vect.z * vect.z);
//    _Magnitudes[index] = vect_mag;
//    return vect_mag;
//}


//[numthreads(64, 1, 1)]
//void CalculateDisplay(uint3 id : SV_DispatchThreadID)
//{
//    if (id.x < (uint) _NumberOfPoints)
//    {
//        int index = id.x;
        
//        CalculateMagnitudes(index);
//    }
//}

[numthreads(1, 1, 1)]
void MaxMagnitude(uint3 id : SV_DispatchThreadID)
{
    _MaxMagnitude[0] = -1.0;
    for (int i = 0; i < _NumberOfPoints; i++)
    {
        if (_Magnitudes[i] > _MaxMagnitude[0])
        {
            _MaxMagnitude[0] = _Magnitudes[i];
        }
    }
}